/*
프로그래머스
Lv.3 단속카메라

고속도로를 이동하는 모든 차량이 고속도로를 이용하면서 단속용 카메라를 한 번은 만나도록 카메라를 설치하려고 합니다.
고속도로를 이동하는 차량의 경로 routes가 매개변수로 주어질 때,
모든 차량이 한 번은 단속용 카메라를 만나도록 하려면 최소 몇 대의 카메라를 설치해야 하는지를 return 하도록 solution 함수를 완성하세요.

제한사항
차량의 대수는 1대 이상 10,000대 이하입니다.
routes에는 차량의 이동 경로가 포함되어 있으며 routes[i][0]에는 i번째 차량이 고속도로에 진입한 지점, routes[i][1]에는 i번째 차량이 고속도로에서 나간 지점이 적혀 있습니다.
차량의 진입/진출 지점에 카메라가 설치되어 있어도 카메라를 만난것으로 간주합니다.
차량의 진입 지점, 진출 지점은 -30,000 이상 30,000 이하입니다.
*/

function solution(routes) {
    // 설치된 카메라 수
    var answer = 0;
    // 나가는 지점 기준으로 정렬 -> route가 긴 값 안에 작은 값들이 포함 될 수 있으므로
    routes.sort((a, b) => a[1] - b[1]);

    // 첫번째 카메라는 가장 먼저 나가는 route의 진출 지점
    let camera = routes[0][1];
    // 첫번째 카메라를 설정했으므로 answer 증가
    answer++;

    routes.forEach(function(route) {
        // 현재 카메라 위치가 다음 지점의 진입 지점보다 앞에 있다면
        // 다음 카메라 위치를 다음 지점의 진출 지점으로 설정하고 answer 증가
        if (camera < route[0]) {
            camera = route[1];
            answer++;
        }
    });
    return answer;
}

console.log(solution([[-20,-15], [-14,-5], [-18,-13], [-5,-3]])); // 2
console.log(solution([[-100,100],[50,170],[150,200],[-50,-10],[10,20],[30,40]])); // 4

// 힌트 얻어서 풀이함